casServerName: cas.dbl24tst2w52.demo.traefiklabs.tech
cas:
  service:
    type: ClusterIP
    publishNotReadyAddresses: true
    port: 8080
  listenPortHttps: 8080
  listenPortJvmDebug: 5005
  ingress:
    enabled: false
casServerContainer:
  jvm:
    extraOpts: ''
  serverKeystoreExistingSecret: ''
  serverKeystoreMountPath: ''
  serverKeystoreSubPath: ''
  casConfig:
    # issue with line breaks? means can't use {{}} variables after first line
    # workaround is to use {{}} variables in yaml version of properties file
    cas.properties: |-
      cas.server.name=http://{{ .Values.casServerName }}
      context.path=/cas
      cas.server.prefix=${cas.server.name}${context.path}

      # put web access logs in same directory as cas logs
      cas.server.tomcat.ext-access-log.directory=/var/log
      cas.server.tomcat.ext-access-log.enabled=true

      # uncomment the folowing to not allow login of built-in users
      # cas.authn.accept.users= 
 
      # since we are behind ingress controller, need to use x-forwarded-for to get client ip
      # if nginx ingress controller is behind another proxy, it needs to be configured globally with the following settings in the ingress controller configmap
      #  use-forwarded-headers: "true"   # very important for CAS or any app that compares IP being used against IP that initiated sessions (session fixation)
      #  enable-underscores-in-headers: "true" # while you are at it, allow underscores in headers, can't recall if important for cas but no need to have nginx dropping your headers with underscores
      cas.audit.engine.alternate-client-addr-header-name=X-Forwarded-For
      server.tomcat.remoteip.remote-ip-header=X-FORWARDED-FOR

      # expose endpoints via http
      management.endpoints.web.exposure.include=health,info,prometheus,metrics,env,loggers,statistics,status,loggingConfig,events,configurationMetadata,caches
      management.endpoints.web.base-path=/actuator
      management.endpoints.web.cors.allowed-origins=http://${cas-host}
      management.endpoints.web.cors.allowed-methods=GET,POST

      # enable endpoints
      management.endpoint.metrics.enabled=true
      management.endpoint.health.enabled=true
      management.endpoint.info.enabled=true
      management.endpoint.env.enabled=true
      management.endpoint.loggers.enabled=true
      management.endpoint.status.enabled=true
      management.endpoint.statistics.enabled=true
      management.endpoint.prometheus.enabled=true
      management.endpoint.events.enabled=true
      management.endpoint.loggingConfig.enabled=true
      management.endpoint.configurationMetadata.enabled=true
      # configure health endpoint
      management.health.defaults.enabled=false
      management.health.ping.enabled=true
      management.health.caches.enabled=true

      # secure endpoints to localhost

      cas.monitor.endpoints.endpoint.defaults.access[0]=AUTHENTICATED
      cas.monitor.endpoints.endpoint.health.access[0]=IP_ADDRESS
      cas.monitor.endpoints.endpoint.health.requiredIpAddresses[0]=127.0.0.1
      cas.monitor.endpoints.endpoint.health.requiredIpAddresses[1]=0:0:0:0:0:0:0:1
      cas.monitor.endpoints.endpoint.health.requiredIpAddresses[2]=10\\..*
      cas.monitor.endpoints.endpoint.health.requiredIpAddresses[3]=172\\.16\\..*
      cas.monitor.endpoints.endpoint.health.requiredIpAddresses[4]=192\\.168\\..*
      #eof
